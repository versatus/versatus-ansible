---
- name: Versatus directory tree
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ admin_user }}"
    group: "{{ admin_group }}"
    mode: "0755"
  loop:
    - "{{ versatus_dir }}/bin"
    - "{{ versatus_dir }}/etc"
    - "{{ versatus_dir }}/home"

    # TODO: We should persist and retrieve these keys to make this idempotent.
- name: Generate protocol key
  ansible.builtin.set_fact:
    blockchain_key: "{{ lookup('community.general.random_string', length=12, special=false) }}"
    compute_key: "{{ lookup('community.general.random_string', length=12, special=false) }}"
    storage_key: "{{ lookup('community.general.random_string', length=12, special=false) }}"

# Create a group common across all service that all users will be a member of. This
# helps to manage permissions and things more easily.
- name: Versatus service group
  ansible.builtin.group:
    name: "{{ versatus_service_group }}"
    state: present

# Create the service account user for this particular service. The name is provided
# by the caller.
- name: Versatus service user
  ansible.builtin.user:
    name: "{{ service_user }}"
    group: "{{ versatus_service_group }}"
    state: present
    comment: "Versatus {{ service_user }} user"
    home: "{{ versatus_dir }}/home/{{ service_user }}"
    password: "*"
    system: true
    umask: "027"

# Ensure that the home directory exists and has the right permissions. This should
# generally happen by default, but may not be as strict.
- name: Service user home directory
  ansible.builtin.file:
    path: "{{ versatus_dir }}/home/{{ service_user }}"
    state: directory
    owner: "{{ service_user }}"
    group: "{{ versatus_service_group }}"
    mode: "0750"

# This configuration is common to all versatus services and binaries and contains
# things like pre-shared keys (created above) and socket addresses. The default is
# likely adequate out of the box for simple cases where all services are on one 
# node.
- name: Versatus service configuration
  ansible.builtin.template:
    src: "versatus-services.json.j2"
    dest: "{{ versatus_dir }}/etc/versatus-services.json"
    owner: "{{ admin_user }}"
    group: "{{ admin_group }}"
    mode: "0644"
  notify:
    - Service restart

- name: Service executable
  ansible.builtin.copy:
    src: "{{ service_executable }}"
    dest: "{{ versatus_dir }}/bin/{{ service_name }}"
    owner: "{{ admin_user }}"
    group: "{{ admin_group }}"
    mode: "0755"
  notify:
    - Systemd units
    - Service restart

- name: Service systemd unit
  ansible.builtin.template:
    src: "systemd-{{ item }}.j2"
    dest: "{{ systemd_dir }}/{{ service_name }}.{{ item }}"
    owner: root
    group: root
    mode: 0644
  loop:
    - "service"
    - "slice"
  notify:
    - Systemd units
    - Service run state
    - Service restart
